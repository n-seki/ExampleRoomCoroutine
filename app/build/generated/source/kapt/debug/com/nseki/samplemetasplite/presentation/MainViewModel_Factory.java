// Generated by Dagger (https://dagger.dev).
package com.nseki.samplemetasplite.presentation;

import com.nseki.samplemetasplite.database.MetaDao;
import com.nseki.samplemetasplite.database.MetaDatabase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<MetaDatabase> databaseProvider;

  private final Provider<MetaDao> daoProvider;

  public MainViewModel_Factory(Provider<MetaDatabase> databaseProvider,
      Provider<MetaDao> daoProvider) {
    this.databaseProvider = databaseProvider;
    this.daoProvider = daoProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(databaseProvider.get(), daoProvider.get());
  }

  public static MainViewModel_Factory create(Provider<MetaDatabase> databaseProvider,
      Provider<MetaDao> daoProvider) {
    return new MainViewModel_Factory(databaseProvider, daoProvider);
  }

  public static MainViewModel newInstance(MetaDatabase database, MetaDao dao) {
    return new MainViewModel(database, dao);
  }
}
